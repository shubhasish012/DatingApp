{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/members/member-messages/member-messages.component.ts","./src/app/members/member-messages/member-messages.component.html","./src/app/admin/photo-management/photo-management.component.ts","./src/app/admin/photo-management/photo-management.component.html","./src/app/_services/account.service.ts","./src/app/_directives/has-role.directive.ts","./src/app/_services/busy.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_models/pagination.ts","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/server-error/server-error.component.ts","./src/app/server-error/server-error.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_services/member.service.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/_services/message.service.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_interceptors/loading.interceptor.ts","./src/app/app.module.ts","./src/app/members/photo-editor/photo-editor.component.ts","./src/app/members/photo-editor/photo-editor.component.html","./src/app/_resolvers/member-detailed.resolver.ts","./src/app/shared.module.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/_services/presence.service.ts","./src/app/_models/userParams.ts","./src/app/not-found/not-found.component.ts","./src/app/not-found/not-found.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/_services/paginationHelper.ts","./src/app/_guards/prevent-unsaved-changes.guard.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.ts","./src/app/modals/confirm-dialog/confirm-dialog.component.html","./src/app/app-routing.module.ts","./src/app/_services/confirm.service.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n\r\n  baseUrl=environment.apiUrl;\r\n\r\n  validationErrors:any[]=[];\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get404Error(){\r\n    this.http.get(this.baseUrl+'buggy/not-found').subscribe((response)=>{\r\n      console.log(response);\r\n    },error=>{\r\n      console.log(error);\r\n    }\r\n    )\r\n  }\r\n\r\n  get400Error(){\r\n    this.http.get(this.baseUrl+'buggy/bad-request').subscribe((response)=>{\r\n      console.log(response);\r\n    },error=>{\r\n      console.log(error);\r\n    }\r\n    )\r\n  }\r\n\r\n  get500Error(){\r\n    this.http.get(this.baseUrl+'buggy/server-error').subscribe((response)=>{\r\n      console.log(response);\r\n    },error=>{\r\n      console.log(error);\r\n    }\r\n    )\r\n  }\r\n\r\n  get401Error(){\r\n    this.http.get(this.baseUrl+'buggy/auth').subscribe((response)=>{\r\n      console.log(response);\r\n    },error=>{\r\n      console.log(error);\r\n    }\r\n    )\r\n  }\r\n\r\n  get400ValidationError(){\r\n    this.http.post(this.baseUrl+'account/register',{}).subscribe((response)=>{\r\n      console.log(response);\r\n    },error=>{\r\n      console.log(error);\r\n      this.validationErrors=error;\r\n    }\r\n    )\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 Error</button>\r\n  <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404 Error</button>\r\n  <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401 Error</button>\r\n  <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400 Error</button>\r\n  <button (click)=\"get400ValidationError()\" class=\"btn btn-outline-primary mr-3\">Test 400 Validation Error</button>\r\n  <div class=\"row mt-5\" *ngIf=\"validationErrors.length>0\">\r\n      <ul class=\"text-danger\">\r\n         <li *ngFor=\"let error of validationErrors\">\r\n              {{error}}\r\n         </li>\r\n      </ul>\r\n  </div>\r\n</ng-container>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-red',\r\n      dateInputFormat: 'DD MMMM YYYY'\r\n    }\r\n  }\r\n  writeValue(obj: any): void {\r\n  }\r\n  registerOnChange(fn: any): void {\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    type=\"text\"\r\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n    class=\"form-control\"\r\n    [formControl]='ngControl.control'\r\n    placeholder=\"{{label}}\"\r\n    bsDatepicker\r\n    [bsConfig]='bsConfig'\r\n    [maxDate]='maxDate'>\r\n  <div *ngIf='ngControl.control.errors?.required' class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    @Output() cancelRegister = new EventEmitter();\r\n    registerForm:FormGroup;\r\n    maxDate:Date;\r\n    validationErrors:string[]=[];\r\n\r\n    constructor(private accountService: AccountService,private toastr:ToastrService,private fb:FormBuilder,\r\n                private router:Router) { }\r\n\r\n    ngOnInit(): void {\r\n      this.initializeForm();\r\n      this.maxDate=new Date();\r\n      this.maxDate.setFullYear(this.maxDate.getFullYear()-18);\r\n    }\r\n\r\n    initializeForm(){\r\n      this.registerForm=this.fb.group({\r\n        gender:['male'],\r\n        username:['',Validators.required],\r\n        knownAs:['',Validators.required],\r\n        dateOfBirth:['',Validators.required],\r\n        city:['',Validators.required],\r\n        country:['',Validators.required],\r\n        password:['',[Validators.required,\r\n          Validators.minLength(4),Validators.maxLength(8)]],\r\n        confirmPassword:['',[Validators.required,this.matchValues('password')]]\r\n      })\r\n    }\r\n\r\n    matchValues(matchTo:string):ValidatorFn{\r\n      return (control:AbstractControl)=>{\r\n        return control?.value === control?.parent?.controls[matchTo].value?null:{isMatching:true};\r\n      }\r\n    }\r\n\r\n    register() {\r\n        this.accountService.register(this.registerForm.value).subscribe((response)=>{\r\n          this.router.navigateByUrl('/members');\r\n        },error=>{\r\n            console.log(error);\r\n            this.validationErrors=error;\r\n        })\r\n    }\r\n\r\n    cancel() {\r\n        this.cancelRegister.emit(false);\r\n    }\r\n\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n  <h2 class=\"text-center text-primary\">Sign Up</h2>\r\n  <hr>\r\n  <div class=\"form-group\">\r\n    <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\r\n    <label for=\"\" class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"male\" formControlName='gender'> Male\r\n    </label>\r\n    <label for=\"\" class=\"radio-inline\">\r\n      <input type=\"radio\" value=\"female\" formControlName='gender'> Female\r\n    </label>\r\n  </div>\r\n  <app-text-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-text-input>\r\n  <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"Known As\"'></app-text-input>\r\n  <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [label]='\"Date of Birth\"' [maxDate]='maxDate'>\r\n  </app-date-input>\r\n  <app-text-input [formControl]='registerForm.controls[\"city\"]' [label]='\"City\"'></app-text-input>\r\n  <app-text-input [formControl]='registerForm.controls[\"country\"]' [label]='\"Country\"'></app-text-input>\r\n  <app-text-input [formControl]='registerForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"Password\"'>\r\n  </app-text-input>\r\n  <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"'\r\n    [type]='\"Password\"'></app-text-input>\r\n  <div class=\"row\" *ngIf=\"validationErrors.length>0\">\r\n    <ul class=\"text-danger\">\r\n      <li *ngFor=\"let error of validationErrors\">\r\n        {{error}}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"form-group text-center\">\r\n    <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n    <button class=\"btn btn-default mr-2\" type=\"button\" (click)=\"cancel()\">Cancel</button>\r\n  </div>\r\n</form>\r\n","import { ChangeDetectionStrategy, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-member-messages',\r\n  templateUrl: './member-messages.component.html',\r\n  styleUrls: ['./member-messages.component.css'],\r\n  changeDetection:ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MemberMessagesComponent implements OnInit {\r\n\r\n  @ViewChild('messageForm') messageForm:NgForm;\r\n  @Input() messages: Message[];\r\n  @Input() username: string;\r\n  messageContent: string;\r\n  constructor(public messageService:MessageService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  sendMessage(){\r\n    this.messageService.sendMessage(this.username,this.messageContent).then(()=>{\r\n      this.messageForm.reset();\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"card\">\r\n  <div class=\"card-body\">\r\n    <div *ngIf=\"(messageService.messageThread$ | async)?.length === 0\">\r\n      No messages yet... say hi by using the message box below\r\n    </div>\r\n\r\n    <ul #scrollMe\r\n      style=\"overflow: scroll;height: 500px;\"\r\n      [scrollTop]=\"scrollMe.scrollHeight\"\r\n      *ngIf=\"(messageService.messageThread$ | async).length>0\"\r\n       class=\"chat\">\r\n      <li *ngFor=\"let message of (messageService.messageThread$ | async)\">\r\n        <div>\r\n          <span class=\"chat-img float-right\">\r\n            <img src=\"{{message.senderPhotourl || './assets/user.png'}}\" alt=\"{{message.senderUsername}}\"\r\n              class=\"rounded-cicle\">\r\n          </span>\r\n          <div class=\"chat-body\">\r\n            <div class=\"header\">\r\n              <small class=\"text-muted\">\r\n                <span class=\"fa fa-clock-o\">{{message.messageSent | timeago}}</span>\r\n                <span class=\"text-danger\" *ngIf=\"!message.dateRead\r\n                    && message.senderUsername!== username\">\r\n                  (Unread)</span>\r\n                <span class=\"text-success\" *ngIf=\"message.dateRead\r\n                    && message.senderUsername!== username\">\r\n                  (read {{message.dateRead | timeago}})</span>\r\n              </small>\r\n            </div>\r\n            <p>{{message.content}}</p>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"card-footer\">\r\n      <form #messageForm=\"ngForm\" (ngSubmit)=\"sendMessage()\">\r\n        <div class=\"input-group\">\r\n          <input\r\n            name=\"messageContent\"\r\n            [(ngModel)]=\"messageContent\"\r\n            required\r\n            type=\"text\"\r\n            class=\"form-control input-sm\"\r\n            placeholder=\"Send a private message\">\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-primary\" [disabled]=\"!messageForm.valid\" type=\"submit\">Send</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-photo-management',\n  templateUrl: './photo-management.component.html',\n  styleUrls: ['./photo-management.component.css']\n})\nexport class PhotoManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>photo-management works!</p>\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\nimport { PresenceService } from './presence.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient,private presence:PresenceService) { }\r\n\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  register(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/register', model).pipe(\r\n      map((user: User) => {\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n          this.presence.createHubConnection(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\n\r\n  setCurrentUser(user: User) {\r\n    user.roles=[];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles)? user.roles = roles: user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n    this.presence.stopHubConnection();\r\n  }\r\n\r\n  getDecodedToken(token){\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit {\n\n  @Input() appHasRole: string[];\n  user:User;\n  constructor(private viewContainerRef: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user =>{\n        this.user = user;\n      })\n     }\n\n  ngOnInit(): void {\n    if(!this.user?.roles || this.user == null){\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if(this.user?.roles.some(r => this.appHasRole.includes(r))){\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else{\n      this.viewContainerRef.clear();\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BusyService {\r\n\r\n  busyRequestCount=0;\r\n\r\n  constructor(private spinnerService:NgxSpinnerService) { }\r\n\r\n  busy(){\r\n    this.busyRequestCount++;\r\n    this.spinnerService.show(undefined,{\r\n      type:'line-scale-party',\r\n      bdColor:'rgba(255,255,255,0)',\r\n      color:'#333333'\r\n    });\r\n  }\r\n\r\n  idle(){\r\n    this.busyRequestCount--;\r\n    if(this.busyRequestCount<=0){\r\n      this.busyRequestCount=0;\r\n      this.spinnerService.hide();\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  registerMode=false;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  registerToggle(){\r\n    this.registerMode=!this.registerMode;\r\n  }\r\n\r\n\r\n  cancelRegisterMode(event:boolean){\r\n    this.registerMode=event;\r\n  }\r\n\r\n}\r\n","<div class=\"container mt-5\">\r\n  <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\r\n    <h1>Find your match</h1>\r\n    <p class=\"lead\">Come on in to view your matches... all you need to do is sign up!</p>\r\n    <div class=\"text-center\">\r\n      <button class=\"btn btn-primary btn-lg mr-2\" (click)=\"registerToggle()\">Register</button>\r\n      <button class=\"btn btn-info btn-lg\">Learn more</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"registerMode\" class=\"container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-4\">\r\n        <app-register (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","export interface Pagination{\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n  result:T;\r\n  pagination: Pagination\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl:'https://localhost:44335/api/',\r\n  hubUrl:'https://localhost:44335/hubs/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService: AccountService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n\r\n    let currentUser: User;\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser = user);\r\n    if (currentUser) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  error:any;\r\n  constructor(private router:Router) {\r\n    const navigation=this.router.getCurrentNavigation();\r\n    this.error=navigation?.extras?.state?.error;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refreshing the page will make the error disappear</h4>\r\n\r\n<ng-container *ngIf=\"error\">\r\n  <h5 class=\"text-danger\">Error: {{error.message}}</h5>\r\n  <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n  <p>What to do next</p>\r\n  <ol>\r\n    <li>Open the chrome dev tools</li>\r\n    <li>Inspect the network tab</li>\r\n    <li>Check the failing request</li>\r\n    <li>Examine the request URL- make sure it is correct</li>\r\n    <li>Reproduce the error in Postman- if we see the same reason, then the issue is not with Angular</li>\r\n    <p>Following is the stack trace- this is where your investigation should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n  </ol>\r\n\r\n</ng-container>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Message } from '../_models/message';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\nimport { MessageService } from '../_services/message.service';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  messages: Message[] = [];\r\n  pagination: Pagination;\r\n  container = 'Outbox';\r\n  pageNumber = 1;\r\n  pageSize = 5;\r\n  loading = false;\r\n\r\n  constructor(private messageService: MessageService, private confirmService: ConfirmService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMessages();\r\n  }\r\n\r\n  loadMessages() {\r\n    this.loading = true;\r\n    this.messageService.getMessages(this.pageNumber, this.pageSize, this.container).subscribe((response) => {\r\n      this.messages = response.result;\r\n      this.pagination = response.pagination;\r\n      this.loading = false;\r\n    })\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    this.confirmService.confirm('Confirm delete message', 'This cannot be undone').subscribe(result => {\r\n      if (result) {\r\n        this.messageService.deleteMessage(id).subscribe(() => {\r\n          this.messages.splice(this.messages.findIndex(m => m.id === id), 1);\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  pageChanged(event: any) {\r\n    this.pageNumber = event.page;\r\n    this.loadMessages();\r\n  }\r\n\r\n}\r\n","<div class=\"row mb-4\">\r\n  <div class=\"btn-group\" name=\"container\">\r\n    <button class=\"btn btn-primary\" btnRadio=\"Unread\" [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\">\r\n      <i class=\"fa fa-envelope\"></i> Unread\r\n    </button>\r\n    <button class=\"btn btn-primary\" btnRadio=\"Inbox\" [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\">\r\n      <i class=\"fa fa-envelope-open\"></i> Inbox\r\n    </button>\r\n    <button class=\"btn btn-primary\" btnRadio=\"Outbox\" [(ngModel)]=\"container\"\r\n      (click)=\"loadMessages()\">\r\n      <i class=\"fa fa-paper-plane\"></i> Outbox\r\n    </button>\r\n\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length === 0\">\r\n  <h3>No messages</h3>\r\n</div>\r\n\r\n<div class=\"row\" *ngIf=\"messages?.length>0\">\r\n  <table class=\"table table-hover\" style=\"cursor: pointer;\">\r\n    <tr>\r\n      <th style=\"width: 40%;\">Message</th>\r\n      <th style=\"width: 20%;\">From / To</th>\r\n      <th style=\"width: 20%;\">Sent / Received</th>\r\n      <th style=\"width: 20%;\"></th>\r\n    </tr>\r\n    <tr [hidden]=\"loading\" *ngFor=\"let message of messages\"\r\n        routerLink='{{container === \"Outbox\"\r\n        ? \"/members/\" + message.recipientUsername\r\n        : \"/members/\" + message.senderUsername}}' [queryParams]=\"{tab:3}\">\r\n        <td>{{message.content}}</td>\r\n        <td>\r\n          <div *ngIf=\"container === 'Outbox'\">\r\n            <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.recipientPhotoUrl || './assets/user.png'}}\"\r\n                 alt=\"{{message.recipientUsername}}\">\r\n            <strong>{{message.recipientUsername | titlecase}}</strong>\r\n          </div>\r\n          <div *ngIf=\"container !== 'Outbox'\">\r\n            <img class=\"img-circle rounded-circle mr-2\" src=\"{{message.senderPhotourl || './assets/user.png'}}\"\r\n                 alt=\"{{message.senderUsername}}\">\r\n            <strong>{{message.senderUsername | titlecase}}</strong>\r\n          </div>\r\n        </td>\r\n        <td>{{message.messageSent | timeago}}</td>\r\n        <td>\r\n          <button class=\"btn btn-danger\" (click)=\"$event.stopPropagation()\" (click)=\"deleteMessage(message.id)\">Delete</button>\r\n        </td>\r\n    </tr>\r\n  </table>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination && !loading\">\r\n  <pagination\r\n     [boundaryLinks]=\"true\"\r\n     [totalItems]=\"pagination.totalItems\"\r\n     [itemsPerPage]=\"pagination.itemsPerPage\"\r\n     [(ngModel)]=\"pagination.currentPage\"\r\n     (pageChanged)=\"pageChanged($event)\"\r\n     previousText=\"&lsaquo;\"\r\n     nextText=\"&rsaquo;\"\r\n     firstText=\"&laquo;\"\r\n     lastText=\"&raquo;\">\r\n\r\n  </pagination>\r\n</div>\r\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\nimport { Message } from '../_models/message';\r\nimport { PaginatedResult } from '../_models/pagination';\r\nimport { User } from '../_models/user';\r\nimport { UserParams } from '../_models/userParams';\r\nimport { AccountService } from './account.service';\r\nimport { getPaginationHeaders, getPaginationResults } from './paginationHelper';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MemberService {\r\n\r\n  baseUrl = environment.apiUrl;\r\n  members: Member[] = [];\r\n  memberCache=new Map();\r\n  user:User;\r\n  userParams:UserParams;\r\n\r\n  constructor(private http: HttpClient,private accountService:AccountService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user=>{\r\n      this.user=user;\r\n      this.userParams=new UserParams(user);\r\n    })\r\n   }\r\n\r\n  getUserParams(){\r\n    return this.userParams;\r\n  }\r\n\r\n  setUserParams(params:UserParams){\r\n    this.userParams=params;\r\n  }\r\n\r\n  resetUserParams(){\r\n    this.userParams=new UserParams(this.user);\r\n    return this.userParams;\r\n  }\r\n\r\n  getMembers(userParams: UserParams) {\r\n\r\n    var response=this.memberCache.get(Object.values(userParams).join('-'));\r\n    if(response){\r\n      return of(response);\r\n    }\r\n\r\n    let params= getPaginationHeaders(userParams.pageNumber,userParams.pageSize);\r\n    params= params.append('minAge',userParams.minAge.toString());\r\n    params= params.append('maxAge',userParams.maxAge.toString());\r\n    params= params.append('gender',userParams.gender);\r\n    params= params.append('orderBy',userParams.orderBy);\r\n\r\n    return getPaginationResults<Member[]>(this.baseUrl + 'users',params, this.http)\r\n              .pipe(map(response=>{\r\n                this.memberCache.set(Object.values(userParams).join('-'),response);\r\n                return response;\r\n              }))\r\n  }\r\n\r\n\r\n  getMember(username: string) {\r\n    const member=[...this.memberCache.values()]\r\n      .reduce((arr,elem)=>arr.concat(elem.result),[])\r\n      .find((member:Member)=>member.username===username);\r\n\r\n    if(member){\r\n      return of(member);\r\n    }\r\n    return this.http.get<Member>(this.baseUrl + 'users/' + username);\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    return this.http.put(this.baseUrl + 'users', member).pipe(\r\n      map(() => {\r\n        var index = this.members.indexOf(member);\r\n        this.members[index] = member;\r\n      })\r\n    )\r\n  }\r\n\r\n  setMainPhoto(photoId: number) {\r\n    return this.http.put(this.baseUrl + 'users/set-main-photo/' + photoId, {});\r\n  }\r\n\r\n  deletePhoto(photoId: number) {\r\n    return this.http.delete(this.baseUrl + 'users/delete-photo/' + photoId);\r\n  }\r\n\r\n  addLike(username:string){\r\n    return this.http.post(this.baseUrl+'likes/'+username,{});\r\n  }\r\n\r\n  getLikes(predicate:string, pageNumber, pageSize){\r\n    let params= getPaginationHeaders(pageNumber,pageSize);\r\n    params=params.append('predicate',predicate);\r\n    return getPaginationResults<Partial<Member[]>>(this.baseUrl+'likes',params,this.http);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router:Router,private toastr:ToastrService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error=>{\r\n        console.log(\"catched\");\r\n        if(error){\r\n          switch (error.status) {\r\n            case 400:\r\n              if(error.error.errors){\r\n                const modalStateErrors=[];\r\n                for(const key in error.error.errors){\r\n                  if(error.error.errors[key]){\r\n                    modalStateErrors.push(error.error.errors[key]);\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else if(typeof(error.error)==='object'){\r\n                this.toastr.error(error.statusText === \"OK\" ? \"Bad Request\" : error.statusText, error.status);\r\n              } else{\r\n                this.toastr.error(error.error,error.status);\r\n              }\r\n              break;\r\n            case 401:\r\n              this.toastr.error(error.statusText === \"OK\" ? \"Unauthorized\" : error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras={state:{error:error.error}};\r\n              this.router.navigateByUrl('/server-error',navigationExtras)\r\n              break;\r\n            default:\r\n              this.toastr.error(\"Something unexpected went wrong\");\r\n              break;\r\n          }\r\n        }\r\n\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private accountService:AccountService, private toastr:ToastrService){}\n  canActivate(): Observable<boolean>{\n    return this.accountService.currentUser$.pipe(\n      map(user =>{\n        if(user.roles.includes('Admin') || user.roles.includes('Moderator')){\n          return true;\n        }\n\n        this.toastr.error(\"You can not enter this area\");\n      })\n    )\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  baseUrl = environment.apiUrl;\n  constructor(private http:HttpClient) { }\n\n  getUsersWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + \"admin/users-with-roles\");\n  }\n\n  updateUserRoles(username : string, roles :string[]){\n    return this.http.post(this.baseUrl + \"admin/edit-roles/\"+ username+'?roles='+ roles, {})\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\nimport { User } from 'src/app/_models/user';\nimport { AdminService } from 'src/app/_services/admin.service';\n\n@Component({\n  selector: 'app-user-management',\n  templateUrl: './user-management.component.html',\n  styleUrls: ['./user-management.component.css']\n})\nexport class UserManagementComponent implements OnInit {\n\n  users:Partial<User[]>;\n  bsModalRef:BsModalRef;\n  constructor(private adminService:AdminService,private modalService:BsModalService) { }\n\n  ngOnInit(): void {\n    this.getUserWithRoles();\n  }\n\n  getUserWithRoles() {\n    this.adminService.getUsersWithRoles().subscribe(users =>{\n      this.users =users;\n    })\n  }\n\n  openRolesModal(user: User) {\n    const config = {\n      class: 'modal-dialog-centered',\n      initialState:{\n        user,\n        roles : this.getRolesArray(user)\n      }\n    }\n    this.bsModalRef = this.modalService.show(RolesModalComponent,config);\n    this.bsModalRef.content.closeBtnName = 'Close';\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values =>{\n      const rolesToUpdate = {\n        roles:[...values.filter(el => el.checked === true).map(el => el.name)]\n      };\n\n      if(rolesToUpdate) {\n        this.adminService.updateUserRoles(user.username,rolesToUpdate.roles).subscribe(()=>{\n          user.roles = [...rolesToUpdate.roles];\n        })\n      }\n    })\n  }\n\n  private getRolesArray(user){\n    const roles = [];\n    const userRoles = user.roles;\n    const availableRoles: any[]= [\n      {name: 'Admin', value: 'Admin'},\n      {name: 'Moderator', value: 'Moderator'},\n      {name: 'Member', value: 'Member'},\n    ];\n\n    availableRoles.forEach(role =>{\n      let isMatch = false;\n      for(const userRole of userRoles){\n        if(role.name === userRole){\n          isMatch =true;\n          role.checked = true;\n          roles.push(role);\n          break;\n        }\n\n      }\n      if(!isMatch){\n        role.checked= false;\n        roles.push(role);\n      }\n    });\n\n    return roles;\n  }\n\n}\n","<div class=\"row\">\n  <table class=\"table\">\n    <tr>\n      <th style=\"width: 30%;\">Username</th>\n      <th style=\"width: 40%;\">Active Roles</th>\n      <th style=\"width: 30%;\"></th>\n    </tr>\n    <tr *ngFor=\"let user of users\">\n      <td>{{user.username}}</td>\n      <td>{{user.roles}}</td>\n      <td><button class=\"btn btn-info\" (click)=\"openRolesModal(user)\">Edit Roles</button></td>\n\n    </tr>\n  </table>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\nimport { TabDirective, TabsetComponent } from 'ngx-bootstrap/tabs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Message } from 'src/app/_models/message';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MemberService } from 'src/app/_services/member.service';\r\nimport { MessageService } from 'src/app/_services/message.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit,OnDestroy {\r\n\r\n  @ViewChild('memberTabs',{static:true}) memberTabs: TabsetComponent;\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n  activeTab:TabDirective;\r\n  messages:Message[]=[];\r\n  user:User;\r\n\r\n  constructor(public presence:PresenceService, private route: ActivatedRoute,\r\n    private messageService:MessageService,private accountService:AccountService,\r\n    private router:Router) {\r\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user=>this.user=user);\r\n      this.router.routeReuseStrategy.shouldReuseRoute = ()=> false;\r\n     }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(data=>{\r\n      this.member = data.member;\r\n    })\r\n\r\n    this.route.queryParams.subscribe(params =>{\r\n      params.tab ? this.selectTab(params.tab) : this.selectTab(0);\r\n    })\r\n\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }\r\n    ]\r\n\r\n    this.galleryImages = this.getImages();\r\n\r\n  }\r\n\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url,\r\n      })\r\n    }\r\n\r\n    return imageUrls;\r\n  }\r\n\r\n\r\n  loadMessages(){\r\n    this.messageService.getMessageThread(this.member.username).subscribe((messages)=>{\r\n      this.messages = messages;\r\n    })\r\n  }\r\n\r\n  selectTab(tabId: number){\r\n    this.memberTabs.tabs[tabId].active=true;\r\n  }\r\n\r\n  onTabActivated(data : TabDirective){\r\n    this.activeTab=data;\r\n    if(this.activeTab.heading === 'Messages' && this.messages.length === 0){\r\n      this.messageService.createHubConnection(this.user,this.member.username);\r\n    } else{\r\n      this.messageService.stopHubConnection();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.messageService.stopHubConnection();\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n      <div class=\"card-body\">\r\n        <div class=\"mb-2\" *ngIf=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n          <i class=\"fa fa-user-circle text-success\"></i> Online now\r\n        </div>\r\n        <div>\r\n          <strong>Location:</strong>\r\n          <p>{{member.city}}, {{member.country}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Age:</strong>\r\n          <p>{{member.age}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Last Active:</strong>\r\n          <p>{{member.lastActive | timeago}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Member since:</strong>\r\n          <p>{{member.created | date: 'dd MMM yyyy'}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <div class=\"btn-group d-flex\">\r\n          <button class=\"btn btn-primary\">Like</button>\r\n          <button class=\"btn btn-success\" (click)=\"selectTab(3)\">Message</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\" #memberTabs>\r\n      <tab heading='About {{member.knownAs}}' (selectTab)=\"onTabActivated($event)\">\r\n        <h4>Description</h4>\r\n        <p>{{member.introduction}}</p>\r\n        <h4>Looking for</h4>\r\n        <p>{{member.lookingFor}}</p>\r\n      </tab>\r\n      <tab heading='Interests' (selectTab)=\"onTabActivated($event)\">\r\n        <h4>Interests</h4>\r\n        <p>{{member.interests}}</p>\r\n      </tab>\r\n      <tab heading='Photos' (selectTab)=\"onTabActivated($event)\">\r\n        <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\" style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n      </tab>\r\n      <tab heading='Messages' (selectTab)=\"onTabActivated($event)\">\r\n        <app-member-messages [username]=\"member.username\"></app-member-messages>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map((user) => {\r\n        if (user) return true;\r\n        this.toastr.error(\"You shall not pass\");\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Group } from '../_models/group';\r\nimport { Message } from '../_models/message';\r\nimport { User } from '../_models/user';\r\nimport { getPaginationHeaders, getPaginationResults } from './paginationHelper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  baseUrl = environment.apiUrl;\r\n  hubUrl = environment.hubUrl;\r\n\r\n  private hubConnection: HubConnection;\r\n  private messageThreadSource = new BehaviorSubject<Message[]>([]);\r\n  messageThread$ = this.messageThreadSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  createHubConnection(user: User, otherUsername: string) {\r\n    this.hubConnection= new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'message?user='+ otherUsername,{\r\n        accessTokenFactory:()=>user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection.start().catch(error => console.log(error));\r\n\r\n    this.hubConnection.on('ReceiveMessageThread',messages=>{\r\n      this.messageThreadSource.next(messages);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessage',message=>{\r\n      this.messageThread$.pipe(take(1)).subscribe(messages =>{\r\n        this.messageThreadSource.next([...messages,message]);\r\n      })\r\n    });\r\n\r\n    this.hubConnection.on('UpdatedGroup',(group:Group)=>{\r\n      if(group.connections.some(x => x.username === otherUsername)){\r\n        this.messageThread$.pipe(take(1)).subscribe(messages=>{\r\n          messages.forEach(message =>{\r\n            if(!message.dateRead){\r\n              message.dateRead = new Date(Date.now());\r\n            }\r\n          })\r\n          this.messageThreadSource.next([...messages]);\r\n        })\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  stopHubConnection(){\r\n    if(this.hubConnection){\r\n      this.hubConnection.stop();\r\n    }\r\n  }\r\n\r\n  getMessages(pageNumber, pageSize, container) {\r\n    let params = getPaginationHeaders(pageNumber, pageSize);\r\n    params = params.append('Container', container);\r\n    return getPaginationResults<Message[]>(this.baseUrl + 'messages', params, this.http);\r\n  }\r\n\r\n  getMessageThread(username: string) {\r\n    return this.http.get<Message[]>(this.baseUrl + 'messages/thread/' + username);\r\n  }\r\n\r\n  async sendMessage(username: string, content: string) {\r\n    return this.hubConnection.invoke('SendMessage',{ recipientUsername: username, content })\r\n      .catch(error => console.log(error));\r\n  }\r\n\r\n  deleteMessage(id: number) {\r\n    return this.http.delete(this.baseUrl + 'messages/' + id);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Pagination } from 'src/app/_models/pagination';\r\nimport { User } from 'src/app/_models/user';\r\nimport { UserParams } from 'src/app/_models/userParams';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MemberService } from 'src/app/_services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\n\r\n  members:Member[];\r\n  pagination:Pagination;\r\n  userParams:UserParams;\r\n  user:User;\r\n  genderList=[{value:'male',display:'Males'},{value:'female',display:'Females'}]\r\n\r\n  constructor(private memberService:MemberService) {\r\n    this.userParams=this.memberService.getUserParams();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMembers();\r\n  }\r\n\r\n  loadMembers(){\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.memberService.getMembers(this.userParams).subscribe(response=>{\r\n      this.members=response.result;\r\n      this.pagination=response.pagination;\r\n    })\r\n  }\r\n\r\n  resetFilters(){\r\n    this.userParams=this.memberService.resetUserParams();\r\n    this.loadMembers();\r\n  }\r\n\r\n  pageChanged(event:any){\r\n    this.userParams.pageNumber=event.page;\r\n    this.memberService.setUserParams(this.userParams);\r\n    this.loadMembers();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>Your matches - {{pagination?.totalItems}} found</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <form #form=\"ngForm\" class=\"form-inline mb-3\" (ngSubmit)=\"loadMembers()\" autocomplete=\"off\">\r\n    <div class=\"form-group\">\r\n      <label>Age from: </label>\r\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"minAge\"\r\n         [(ngModel)]=\"userParams.minAge\">\r\n    </div>\r\n\r\n    <div class=\"form-group px-2\">\r\n      <label>Age to: </label>\r\n      <input type=\"number\" class=\"form-control ml-1\" style=\"width: 70px;\" name=\"maxAge\"\r\n         [(ngModel)]=\"userParams.maxAge\">\r\n    </div>\r\n\r\n    <div class=\"form-group px-2\">\r\n      <label>Show: </label>\r\n      <select name=\"gender\" style=\"width: 130px;\" class=\"form-control ml-1\" [(ngModel)]=\"userParams.gender\">\r\n        <option *ngFor=\"let gender of genderList\" [value]=\"gender.value\">\r\n          {{gender.display}}\r\n        </option>\r\n      </select>\r\n    </div>\r\n    <button class=\"btn btn-primary ml-1\" type=\"submit\">Apply Filters</button>\r\n    <button (click)=\"resetFilters()\" class=\"btn btn-info ml-1\" type=\"button\">Reset Filters</button>\r\n    <div class=\"col\">\r\n      <div class=\"btn-group float-right\">\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"lastActive\"\r\n          [(ngModel)]=\"userParams.orderBy\">Last Active</button>\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          name=\"orderBy\"\r\n          (click)=\"loadMembers()\"\r\n          btnRadio=\"created\"\r\n          [(ngModel)]=\"userParams.orderBy\">Newest Members</button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </form>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div *ngFor=\"let member of members\" class=\"col-2\">\r\n    <app-member-card [member]=\"member\"></app-member-card>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n     [boundaryLinks]=\"true\"\r\n     [totalItems]=\"pagination.totalItems\"\r\n     [itemsPerPage]=\"pagination.itemsPerPage\"\r\n     [(ngModel)]=\"pagination.currentPage\"\r\n     (pageChanged)=\"pageChanged($event)\"\r\n     previousText=\"&lsaquo;\"\r\n     nextText=\"&rsaquo;\"\r\n     firstText=\"&laquo;\"\r\n     lastText=\"&raquo;\">\r\n\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\nimport { PresenceService } from './_services/presence.service';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n    title = 'The Dating App';\r\n    users:any;\r\n\r\n    constructor(private accountService:AccountService,private presence:PresenceService) { }\r\n\r\n    ngOnInit() {\r\n        this.setCurrentUser();\r\n    }\r\n\r\n    setCurrentUser(){\r\n      const user:User= JSON.parse(localStorage.getItem('user'));\r\n      if(user){\r\n        this.accountService.setCurrentUser(user);\r\n        this.presence.createHubConnection(user);\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n","<ngx-spinner>\r\n  <h3>Loading...</h3>\r\n</ngx-spinner>\r\n<app-nav></app-nav>\r\n\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { BusyService } from '../_services/busy.service';\r\nimport { delay, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoadingInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private busyService:BusyService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    this.busyService.busy();\r\n    return next.handle(request).pipe(\r\n      delay(1000),\r\n      finalize(()=>{\r\n        this.busyService.idle();\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { LoadingInterceptor } from './_interceptors/loading.interceptor';\r\nimport { PhotoEditorComponent } from './members/photo-editor/photo-editor.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { MemberMessagesComponent } from './members/member-messages/member-messages.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { PhotoManagementComponent } from './admin/photo-management/photo-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { ConfirmDialogComponent } from './modals/confirm-dialog/confirm-dialog.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    PhotoEditorComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    MemberMessagesComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    PhotoManagementComponent,\r\n    RolesModalComponent,\r\n    ConfirmDialogComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule\r\n  ],\r\n  providers: [\r\n    {provide:HTTP_INTERCEPTORS,useClass:ErrorInterceptor,multi:true},\r\n    {provide:HTTP_INTERCEPTORS,useClass:JwtInterceptor,multi:true},\r\n    {provide:HTTP_INTERCEPTORS,useClass:LoadingInterceptor,multi:true},\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { Photo } from 'src/app/_models/photo';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MemberService } from 'src/app/_services/member.service';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-photo-editor',\r\n  templateUrl: './photo-editor.component.html',\r\n  styleUrls: ['./photo-editor.component.css']\r\n})\r\nexport class PhotoEditorComponent implements OnInit {\r\n\r\n  @Input() member: Member;\r\n  uploader: FileUploader;\r\n  hasBaseDropzoneOver = false;\r\n  baseUrl = environment.apiUrl;\r\n  user: User;\r\n  constructor(private accountService: AccountService,private memberService:MemberService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initializeUploader();\r\n  }\r\n\r\n  fileOverBase(e:any){\r\n    this.hasBaseDropzoneOver=e;\r\n  }\r\n\r\n  setMainPhoto(photo:Photo){\r\n    this.memberService.setMainPhoto(photo.id).subscribe(()=>{\r\n      this.user.photoUrl=photo.url;\r\n      this.accountService.setCurrentUser(this.user);\r\n      this.member.photoUrl=photo.url;\r\n      this.member.photos.forEach(p=>{\r\n        if(p.isMain) p.isMain=false;\r\n        if(p.id == photo.id) p.isMain=true;\r\n      })\r\n    })\r\n  }\r\n\r\n  deletePhoto(photoId:number){\r\n    this.memberService.deletePhoto(photoId).subscribe(()=>{\r\n      this.member.photos=this.member.photos.filter(x=>x.id!==photoId);\r\n    })\r\n  }\r\n\r\n  initializeUploader() {\r\n    this.uploader = new FileUploader({\r\n      url: this.baseUrl + 'users/add-photo',\r\n      authToken: 'Bearer ' + this.user.token,\r\n      isHTML5: true,\r\n      allowedFileType: ['image'],\r\n      removeAfterUpload: true,\r\n      autoUpload: false,\r\n      maxFileSize: 10 * 1024 * 1024\r\n\r\n    });\r\n\r\n    this.uploader.onAfterAddingFile=(file)=>{\r\n      file.withCredentials=false;\r\n    }\r\n\r\n    this.uploader.onSuccessItem=(item,response,status,headers)=>{\r\n      if(response){\r\n        const photo= JSON.parse(response);\r\n        this.member.photos.push(photo);\r\n        if(photo.isMain){\r\n          this.user.photoUrl=photo.url;\r\n          this.member.photoUrl=photo.url;\r\n          this.accountService.setCurrentUser(this.user);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"row mt-3\">\r\n  <div class=\"col-2\" *ngFor=\"let photo of member.photos\">\r\n      <img src=\"{{photo.url}}\" alt=\"{{photo.url}}\" class=\"img-thumbnail p-1\">\r\n      <div class=\"text-center\">\r\n        <button\r\n          [disabled]=\"photo.isMain\"\r\n          (click)=\"setMainPhoto(photo)\"\r\n          [ngClass]='photo.isMain?\"btn-sucess active\":\"btn-outline-success\"'\r\n          class=\"btn btn-sm\">Main</button>\r\n        <button class=\"btn btn-sm btn-danger\" [disabled]=\"photo.isMain\" (click)=\"deletePhoto(photo.id)\"><i class=\"fa fa-trash\"></i></button>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n\r\n  <div class=\"col-md-3\">\r\n\r\n      <h3>Add Photos</h3>\r\n\r\n      <div ng2FileDrop\r\n           [ngClass]=\"{'nv-file-over': hasBaseDropzoneOver}\"\r\n           (fileOver)=\"fileOverBase($event)\"\r\n           [uploader]=\"uploader\"\r\n           class=\"card bg-faded p-3 text-center mb-3 my-drop-zone\">\r\n           <i class=\"fa fa-upload fa-3x\"></i>\r\n          Drop Photos Here\r\n      </div>\r\n\r\n      Multiple\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple  /><br/>\r\n\r\n      Single\r\n      <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" />\r\n  </div>\r\n\r\n  <div class=\"col-md-9\" style=\"margin-bottom: 40px\" *ngIf=\"uploader?.queue?.length\">\r\n\r\n      <h3>Upload queue</h3>\r\n      <p>Queue length: {{ uploader?.queue?.length }}</p>\r\n\r\n      <table class=\"table\">\r\n          <thead>\r\n          <tr>\r\n              <th width=\"50%\">Name</th>\r\n              <th>Size</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let item of uploader.queue\">\r\n              <td><strong>{{ item?.file?.name }}</strong></td>\r\n              <td *ngIf=\"uploader.options.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\r\n          </tr>\r\n          </tbody>\r\n      </table>\r\n\r\n      <div>\r\n          <div>\r\n              Queue progress:\r\n              <div class=\"progress\" style=\"\">\r\n                  <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': uploader.progress + '%' }\"></div>\r\n              </div>\r\n          </div>\r\n          <button type=\"button\" class=\"btn btn-success btn-s\"\r\n                  (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\r\n              <span class=\"fa fa-upload\"></span> Upload all\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-warning btn-s\"\r\n                  (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\r\n              <span class=\"fa fa-ban\"></span> Cancel all\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-danger btn-s\"\r\n                  (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\r\n              <span class=\"a fa-trash\"></span> Remove all\r\n          </button>\r\n      </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { Member } from \"../_models/member\";\r\nimport { MemberService } from \"../_services/member.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MemberDeatailedResolver implements Resolve<Member>{\r\n\r\n  constructor(private memberService: MemberService){}\r\n\r\n  resolve(route: ActivatedRouteSnapshot) : Observable<Member> {\r\n    return this.memberService.getMember(route.paramMap.get('username'));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport {ToastrModule} from 'ngx-toastr';\r\nimport {TabsModule} from 'ngx-bootstrap/tabs'\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport {NgxSpinnerModule} from 'ngx-spinner';\r\nimport { FileUploadModule } from 'ng2-file-upload';\r\nimport {BsDatepickerModule} from 'ngx-bootstrap/datepicker';\r\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\r\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\r\nimport { TimeagoModule } from 'ngx-timeago';\r\nimport { ModalModule} from 'ngx-bootstrap/modal';\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass:'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    NgxSpinnerModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule.forRoot(),\r\n    PaginationModule.forRoot(),\r\n    ButtonsModule.forRoot(),\r\n    TimeagoModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports:[\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    NgxSpinnerModule,\r\n    FileUploadModule,\r\n    BsDatepickerModule,\r\n    PaginationModule,\r\n    ButtonsModule,\r\n    TimeagoModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n\r\n  @Input() label:string;\r\n  @Input() type='text';\r\n\r\n  constructor(@Self() public ngControl:NgControl) {\r\n    this.ngControl.valueAccessor=this;\r\n   }\r\n  writeValue(obj: any): void {\r\n  }\r\n  registerOnChange(fn: any): void {\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"form-group\">\r\n  <input\r\n    [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n    type={{type}}\r\n    class=\"form-control\"\r\n    [formControl]='ngControl.control'\r\n    placeholder={{label}}>\r\n  <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n  <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">{{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}</div>\r\n  <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">{{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}</div>\r\n  <div *ngIf=\"ngControl.control.errors?.isMatching\" class=\"invalid-feedback\">Password do not match</div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from '../_models/member';\r\nimport { Pagination } from '../_models/pagination';\r\nimport { MemberService } from '../_services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n  members: Partial<Member[]>;\r\n  predicate = 'liked';\r\n  pageNumber=1;\r\n  pageSize =2;\r\n  pagination:Pagination;\r\n\r\n  constructor(private memberService:MemberService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadLikes();\r\n  }\r\n\r\n  loadLikes(){\r\n    this.memberService.getLikes(this.predicate,this.pageNumber,this.pageSize).subscribe(response=>{\r\n      this.members=response.result;\r\n      this.pagination=response.pagination;\r\n    })\r\n  }\r\n\r\n  pageChanged(event:any){\r\n    this.pageNumber=event.page;\r\n    this.loadLikes();\r\n  }\r\n\r\n}\r\n","<div class=\"text-center mt-3\">\r\n  <h2>{{predicate === 'liked'? 'Members I like' : 'Members who like me'}}</h2>\r\n</div>\r\n\r\n<div class=\"container mt-3\">\r\n  <div class=\"row\">\r\n    <div class=\"btn-group\" name=\"predicate\">\r\n      <button class=\"btn btn-primary\" btnRadio=\"liked\"\r\n        [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members I like</button>\r\n      <button class=\"btn btn-primary\" btnRadio=\"likedBy\"\r\n        [(ngModel)]=\"predicate\" (click)=\"loadLikes()\">Members who like me</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row mt-3\">\r\n    <div class=\"col-2\" *ngFor=\"let member of members\">\r\n      <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"d-flex justify-content-center\" *ngIf=\"pagination\">\r\n  <pagination\r\n     [boundaryLinks]=\"true\"\r\n     [totalItems]=\"pagination.totalItems\"\r\n     [itemsPerPage]=\"pagination.itemsPerPage\"\r\n     [(ngModel)]=\"pagination.currentPage\"\r\n     (pageChanged)=\"pageChanged($event)\"\r\n     previousText=\"&lsaquo;\"\r\n     nextText=\"&rsaquo;\"\r\n     firstText=\"&laquo;\"\r\n     lastText=\"&raquo;\">\r\n\r\n  </pagination>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n    selector: 'app-nav',\r\n    templateUrl: './nav.component.html',\r\n    styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n\r\n    model: any = {};\r\n\r\n\r\n    constructor(public accountService: AccountService,private router:Router,\r\n                private toastr:ToastrService) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    login() {\r\n        this.accountService.login(this.model).subscribe((response) => {\r\n            this.router.navigateByUrl('/members');\r\n        })\r\n    }\r\n\r\n    logout() {\r\n        this.accountService.logout();\r\n        this.router.navigateByUrl('/');\r\n    }\r\n\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\" routerLinkActive=\"active\">Dating App</a>\r\n\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/members\" routerLinkActive=\"active\">Matches</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/lists\" routerLinkActive=\"active\">Lists</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/messages\" routerLinkActive=\"active\">Messages</a>\r\n                </li>\r\n                <li *appHasRole='[\"Admin\",\"Moderator\"]' class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink=\"/admin\" routerLinkActive=\"active\">Admin</a>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"nav-item\">\r\n              <a class=\"nav-link\" routerLink=\"/errors\" routerLinkActive=\"active\">Errors</a>\r\n          </li>\r\n        </ul>\r\n\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n          <img src=\"{{user.photoUrl || './assets/user.png'}}\" alt=\"{{user.username}}\">\r\n            <a class=\"dropdown-toggle text-light ml-2\" dropdownToggle>Welcome {{user.knownAs || user.username | titlecase}}</a>\r\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n                <a href=\"\" class=\"dropdown-item\" routerLink=\"member/edit\">Edit Profile</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a href=\"\" class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUser$ | async)===null\" #loginForm=\"ngForm\" class=\"form-inline mt-2 mt-md-0\"\r\n            (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n            <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"text\"\r\n                placeholder=\"Username\">\r\n            <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" type=\"password\"\r\n                placeholder=\"Password\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n        </form>\r\n    </div>\r\n</nav>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MemberService } from 'src/app/_services/member.service';\r\nimport { PresenceService } from 'src/app/_services/presence.service';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n\r\n  @Input() member:Member;\r\n\r\n  constructor(private memberService:MemberService,private toastr:ToastrService,\r\n    public presence:PresenceService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addLike(member:Member){\r\n    this.memberService.addLike(member.username).subscribe(()=>{\r\n      this.toastr.success(\"You have liked \"+ member.knownAs);\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\">\r\n                <button routerLink='/members/{{member.username}}' class=\"btn btn-primary\">\r\n                    <i class=\"fa fa-user\"></i>\r\n                </button>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n                <button class=\"btn btn-primary\" (click)=\"addLike(member)\">\r\n                    <i class=\"fa fa-heart\"></i>\r\n                </button>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n                <button class=\"btn btn-primary\" routerLink=\"/members/{{member.username}}\"\r\n                    [queryParams]=\"{tab:3}\">\r\n                    <i class=\"fa fa-envelope\"></i>\r\n                </button>\r\n            </li>\r\n\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\">\r\n            <span [class.is-online]=\"(presence.onlineUsers$ | async).includes(member.username)\">\r\n              <i class=\"fa fa-user mr-2\"></i>\r\n            </span>\r\n            {{member.knownAs}}, {{member.age}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PresenceService {\r\n  hubUrl = environment.hubUrl;\r\n  private hubConnection: HubConnection;\r\n  private onlineUsersSource = new BehaviorSubject<string[]>([]);\r\n  onlineUsers$ = this.onlineUsersSource.asObservable();\r\n\r\n  constructor(private toastr:ToastrService,private router:Router) { }\r\n\r\n  createHubConnection(user:User) {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(this.hubUrl + 'presence',{\r\n        accessTokenFactory: () => user.token\r\n      })\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .catch(error => console.log(error));\r\n\r\n    this.hubConnection.on(\"UserIsOnline\", username =>{\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames=>{\r\n        this.onlineUsersSource.next([...usernames,username])\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on(\"UserIsOffline\", username =>{\r\n      this.onlineUsers$.pipe(take(1)).subscribe(usernames=>{\r\n        this.onlineUsersSource.next([...usernames.filter(x => x !== username)]);\r\n      })\r\n    })\r\n\r\n    this.hubConnection.on(\"GetOnlineUsers\",(usernames:string[])=>{\r\n      this.onlineUsersSource.next(usernames);\r\n    })\r\n\r\n    this.hubConnection.on('NewMessageReceived',({username,knownAs})=>{\r\n      debugger\r\n      this.toastr.info(knownAs + ' has sent you a new message')\r\n        .onTap\r\n        .pipe(take(1))\r\n        .subscribe(()=>this.router.navigateByUrl('/members/'+username + '?tab=3'));\r\n    })\r\n  }\r\n\r\n  stopHubConnection(){\r\n    this.hubConnection.stop().catch(error => console.log(error));\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport class UserParams{\r\n  gender:string;\r\n  minAge =18;\r\n  maxAge =99;\r\n  pageNumber=1;\r\n  pageSize=5;\r\n  orderBy='lastActive';\r\n\r\n  constructor(user:User){\r\n    this.gender=user.gender==='female'?'male':'female';\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>Not found</h1>\r\n  <button class=\"btn btn-info btn-lg\" routerLink=\"/\">Return to home</button>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n\n<div class=\"tab-panel\">\n  <tabset class=\"member-tabset\">\n    <tab heading='User management' *appHasRole='[\"Admin\"]'>\n      <div class=\"container\">\n        <app-user-management></app-user-management>\n      </div>\n    </tab>\n    <tab heading='Photo management' *appHasRole='[\"Admin\",\"Moderator\"]'>\n      <div class=\"container\">\n        <app-photo-management></app-photo-management>\n      </div>\n    </tab>\n  </tabset>\n</div>\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MemberService } from 'src/app/_services/member.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n\r\n  @ViewChild('editForm') editForm: NgForm;\r\n  member: Member;\r\n  user: User;\r\n  @HostListener('window:beforeunload', ['$event']) unloadNotification($event: any) {\r\n    if (this.editForm.dirty) {\r\n      $event.returnValue = true;\r\n    }\r\n  }\r\n\r\n  constructor(private accountService: AccountService, private memberService: MemberService, private toastr: ToastrService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe((user) => this.user = user);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe((member) => {\r\n      this.member = member;\r\n    })\r\n  }\r\n\r\n  updateMember() {\r\n    this.memberService.updateMember(this.member).subscribe(() => {\r\n      this.toastr.success('Profile updated successfully');\r\n      this.editForm.reset(this.member);\r\n    })\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n  <div class=\"col-4\">\r\n    <h1>Your Profile</h1>\r\n  </div>\r\n  <div class=\"col-8\">\r\n    <div class=\"alert alert-info\" *ngIf=\"editForm.dirty\">\r\n      <strong>Information: </strong>You have made changes. Any unsaved changes will be lost\r\n    </div>\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <div class=\"card\">\r\n      <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top img-thumbnail\">\r\n      <div class=\"card-body\">\r\n        <div>\r\n          <strong>Location:</strong>\r\n          <p>{{member.city}}, {{member.country}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Age:</strong>\r\n          <p>{{member.age}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Last Active:</strong>\r\n          <p>{{member.lastActive | timeago}}</p>\r\n        </div>\r\n        <div>\r\n          <strong>Membre since:</strong>\r\n          <p>{{member.created | date:'dd MMM yyyy'}}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n          <button [disabled]=\"!editForm.dirty\" form=\"editForm\" class=\"btn btn-primary btn-block\">Save Changes</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-8\">\r\n    <tabset class=\"member-tabset\">\r\n      <tab heading='About {{member.knownAs}}'>\r\n        <form #editForm=\"ngForm\" id=\"editForm\" (ngSubmit)=\"updateMember()\">\r\n          <h4>Description</h4>\r\n          <textarea class=\"form-control\" [(ngModel)]=\"member.introduction\" name=\"introduction\" rows=\"6\"></textarea>\r\n          <h4 class=\"mt-2\">Looking for</h4>\r\n          <textarea class=\"form-control\" [(ngModel)]=\"member.lookingFor\" name=\"lookingFor\" rows=\"6\"></textarea>\r\n          <h4 class=\"mt-2\">Interests</h4>\r\n          <textarea class=\"form-control\" [(ngModel)]=\"member.interests\" name=\"interests\" rows=\"6\"></textarea>\r\n          <h4 class=\"mt-2\">Location Details: </h4>\r\n          <div class=\"form-inline\">\r\n            <label for=\"city\">City: </label>\r\n            <input [(ngModel)]=\"member.city\" type=\"text\" name=\"city\" class=\"form-control mx-2\">\r\n            <label for=\"country\">Country: </label>\r\n            <input [(ngModel)]=\"member.country\" type=\"text\" name=\"country\" class=\"form-control mx-2\">\r\n          </div>\r\n        </form>\r\n      </tab>\r\n      <tab heading='Edit Photos'>\r\n        <app-photo-editor [member]=\"member\"></app-photo-editor>\r\n      </tab>\r\n    </tabset>\r\n  </div>\r\n</div>\r\n\r\n","import { HttpClient, HttpParams } from \"@angular/common/http\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { PaginatedResult } from \"../_models/pagination\";\r\n\r\nexport function getPaginationResults<T>(url:string,params: HttpParams, http:HttpClient) {\r\n  const paginatedResult: PaginatedResult<T> = new PaginatedResult<T>();\r\n\r\n  return http.get<T>(url, { observe: 'response', params }).pipe(\r\n    map(response => {\r\n      paginatedResult.result = response.body;\r\n      if (response.headers.get('Pagination') !== null) {\r\n        paginatedResult.pagination = JSON.parse(response.headers.get('Pagination'));\r\n      }\r\n      return paginatedResult;\r\n    })\r\n  );\r\n}\r\n\r\nexport function getPaginationHeaders(pageNumber: number, pageSize: number) {\r\n  let params = new HttpParams();\r\n\r\n  params = params.append('pageNumber', pageNumber.toString());\r\n  params = params.append('pageSize', pageSize.toString());\r\n\r\n  return params;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { MemberEditComponent } from '../members/member-edit/member-edit.component';\r\nimport { ConfirmService } from '../_services/confirm.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PreventUnsavedChangesGuard implements CanDeactivate<unknown> {\r\n\r\n  constructor(private confirmService:ConfirmService){}\r\n  canDeactivate(\r\n    component: MemberEditComponent): Observable<boolean>| boolean {\r\n      if(component.editForm.dirty){\r\n        return this.confirmService.confirm();\r\n      }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.css']\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n\r\n  title: string;\r\n  message: string;\r\n  btnOKText : string;\r\n  btnCancelText: string;\r\n  result: boolean;\r\n\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  confirm(){\r\n    this.result = true;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n  decline(){\r\n    this.result = false;\r\n    this.bsModalRef.hide();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-header\">\r\n  <h4 class=\"modal-title pull-left\">{{title}}</h4>\r\n</div>\r\n<div class=\"modal-body\">\r\n <p>{{message}}</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"confirm()\">{{btnOKText}}</button>\r\n  <button type=\"button\" class=\"btn btn-danger\" (click)=\"decline()\">{{btnCancelText}}</button>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { NotFoundComponent } from './not-found/not-found.component';\r\nimport { ServerErrorComponent } from './server-error/server-error.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\nimport { PreventUnsavedChangesGuard } from './_guards/prevent-unsaved-changes.guard';\r\nimport { MemberDeatailedResolver } from './_resolvers/member-detailed.resolver';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path:'',\r\n    runGuardsAndResolvers:'always',\r\n    canActivate:[AuthGuard],\r\n    children:[\r\n      { path: 'members', component: MemberListComponent},\r\n      { path: 'members/:username', component: MemberDetailComponent, resolve:{member : MemberDeatailedResolver} },\r\n      { path: 'member/edit', component: MemberEditComponent,canDeactivate:[PreventUnsavedChangesGuard] },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent,canActivate:[AdminGuard] },\r\n    ]\r\n  },\r\n  {path:'errors',component:TestErrorsComponent},\r\n  {path:'not-found',component:NotFoundComponent},\r\n  {path:'server-error',component:ServerErrorComponent},\r\n\t{ path: '**', component: HomeComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable } from 'rxjs';\r\nimport { ConfirmDialogComponent } from '../modals/confirm-dialog/confirm-dialog.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n\r\n  bsModalRef:BsModalRef;\r\n  constructor(private modalService: BsModalService) { }\r\n\r\n  confirm(title = 'Confirmation',\r\n    message = 'Are you sure you want to do this?',\r\n    btnOKText ='OK',\r\n    btnCancelText =  'Cancel'):Observable<boolean>{\r\n      const config= {\r\n        initialState: {\r\n          title,\r\n          message,\r\n          btnOKText,\r\n          btnCancelText\r\n        }\r\n      }\r\n\r\n      this.bsModalRef= this.modalService.show(ConfirmDialogComponent, config);\r\n\r\n      return new Observable<boolean>(this.getResult());\r\n    }\r\n\r\n    private getResult(){\r\n      return (observer)=>{\r\n        const subscription= this.bsModalRef.onHidden.subscribe(()=>{\r\n          observer.next(this.bsModalRef.content.result);\r\n          observer.complete();\r\n        })\r\n      }\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { User } from 'src/app/_models/user';\n\n@Component({\n  selector: 'app-roles-modal',\n  templateUrl: './roles-modal.component.html',\n  styleUrls: ['./roles-modal.component.css']\n})\nexport class RolesModalComponent implements OnInit {\n\n  @Input() updateSelectedRoles = new EventEmitter();\n  user:User;\n  roles:any[];\n  constructor(public bsModalRef:BsModalRef) { }\n\n  ngOnInit(): void {\n  }\n\n  updateRoles() {\n    this.updateSelectedRoles.emit(this.roles);\n    this.bsModalRef.hide();\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title pull-left\">Edit roles for{{user?.username}}</h4>\n  <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n<div class=\"modal-body\">\n <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n   <div class=\"form-check\" *ngFor=\"let role of roles\">\n      <input type=\"checkbox\" class=\"form-check-input\"\n       [checked]=\"role.checked\"\n       value=\"role.name\"\n       (change)=\"role.checked= !role.checked\"\n       [disabled]=\"role.name === 'Admin' && user.username === 'admin'\">\n       <label>{{role.name}}</label>\n   </div>\n </form>\n</div>\n<div class=\"modal-footer\">\n  <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n  <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n</div>\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}